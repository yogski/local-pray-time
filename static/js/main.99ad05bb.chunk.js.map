{"version":3,"sources":["pages/About.js","api/index.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Component","APIClient","axios","get","result","status","ip","data","console","log","country","city","latitude","longitude","currentTime","Date","currentDay","getDay","currentMonth","getMonth","imsak","results","datetime","times","subuh","dzuhur","ashar","maghrib","isya","date_masehi","getDate","getFullYear","time_offset","location","local_offset","time_format","settings","timeformat","Home","props","renderer","hours","minutes","seconds","completed","state","next_pray_time","forceUpdate","request","prayTimes","is_loading","is_error","next_pray_date","current_pray_time","error_message","getNextPrayDate","bind","this","setState","getIP","getGeolocationFromIP","geo","getPrayTime","prayTime","getNextPrayName","getCurrentPrayTime","indexNextPrayTime","map","time","Number","split","getHours","getMinutes","indexOf","nextPrayTime","nextTime","setHours","setMinutes","getTime","idx","getNextPrayIndex","init","loading","errorFound","alert","style","parseInt","date","App","items","label","icon","command","window","model","popup","ref","el","menu","id","onClick","event","toggle","aria-controls","aria-haspopup","exact","path","name","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrimeReact","ripple","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99ad05bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1 className=\"display-value\">About</h1>\r\n        <p>Local Pray Time, by Yogi Saputro</p>\r\n        <p></p>\r\n      </div>\r\n    );\r\n  }\r\n}","import axios from 'axios';\r\n\r\nexport default class APIClient {\r\n  async getIP() {\r\n    try {\r\n      let result = await axios.get('https://icanhazip.com');\r\n      if (result.status === 200) {\r\n        return {ip : result.data};\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (err) {\r\n      console.log('[function: getIP]:',err);\r\n    }\r\n  }\r\n\r\n  async getGeolocationFromIP(ip) {\r\n    try {\r\n      let result = await axios.get(`https://www.iplocate.io/api/lookup/${ip}`);\r\n      if (result.status === 200) {\r\n        /* \r\n        return format : {country, city, latitude, longitude}\r\n        */\r\n        return {\r\n          country : result.data.country ? result.data.country : 'N/A',\r\n          city :  result.data.city ? result.data.city : 'N/A',\r\n          latitude : result.data.latitude ? result.data.latitude : 'N/A',\r\n          longitude : result.data.longitude ? result.data.longitude : 'N/A'\r\n        };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (err) {\r\n      console.log('[function: getGeolocationFromIP]:',err);\r\n    }\r\n  }\r\n\r\n  async getPrayTime(latitude,longitude) {\r\n    try {\r\n      let result = await axios.get(`https://api.pray.zone/v2/times/today.json?longitude=${longitude}&latitude=${latitude}`);\r\n      if (result.status === 200) {\r\n        /* \r\n        return format : {imsak, subuh, dzuhur, ashar, maghrib, isya, date_masehi, time_offset, time_format}\r\n        */\r\n\r\n        // set correct time to locale\r\n        const currentTime = new Date();\r\n        const days = ['Ahad', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']\r\n        const currentDay = days[currentTime.getDay()];\r\n        const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];\r\n        const currentMonth = months[currentTime.getMonth()];\r\n\r\n        return {\r\n          imsak : result.data.results.datetime[0].times['Imsak'] ? result.data.results.datetime[0].times['Imsak'] : 'N/A',\r\n          subuh : result.data.results.datetime[0].times['Fajr'] ? result.data.results.datetime[0].times['Fajr'] : 'N/A',\r\n          dzuhur : result.data.results.datetime[0].times['Dhuhr'] ? result.data.results.datetime[0].times['Dhuhr'] : 'N/A',\r\n          ashar : result.data.results.datetime[0].times['Asr'] ? result.data.results.datetime[0].times['Asr'] : 'N/A',\r\n          maghrib : result.data.results.datetime[0].times['Maghrib'] ? result.data.results.datetime[0].times['Maghrib'] : 'N/A',\r\n          isya : result.data.results.datetime[0].times['Isha'] ? result.data.results.datetime[0].times['Isha'] : 'N/A',\r\n          date_masehi : `${currentDay}, ${currentTime.getDate()} ${currentMonth} ${currentTime.getFullYear()}`, \r\n          time_offset : result.data.results.location.local_offset ? result.data.results.location.local_offset : 'N/A',\r\n          time_format : result.data.results.settings.timeformat ? result.data.results.settings.timeformat : 'N/A'\r\n        } ;\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (err) {\r\n      console.log('[function: getGeolocationFromIP]:',err);\r\n    }\r\n  }\r\n\r\n} ","import React, { Component } from 'react';\r\nimport APIClient from './../api'\r\nimport { BlockLoading } from 'react-loadingg';\r\nimport Countdown from 'react-countdown';\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.request = new APIClient();\r\n    this.prayTimes = ['subuh', 'dzuhur', 'ashar', 'maghrib', 'isya'];\r\n    this.state = {\r\n      is_loading : false,\r\n      is_error : false,\r\n      next_pray_time : null,\r\n      next_pray_date : null,\r\n      current_pray_time : null,\r\n      error_message : null\r\n    }\r\n\r\n    this.getNextPrayDate = this.getNextPrayDate.bind(this);\r\n  }\r\n\r\n  async init() {\r\n    try {\r\n      this.setState({is_loading : true});\r\n\r\n      // get external data\r\n      const ip = await this.request.getIP();\r\n      const geo = await this.request.getGeolocationFromIP(ip.ip);\r\n      const prayTime = await this.request.getPrayTime(geo.latitude, geo.longitude);\r\n\r\n      // set state\r\n      this.setState({\r\n        is_loading : false,\r\n        next_pray_time : this.getNextPrayName(prayTime),\r\n        next_pray_date : this.getNextPrayDate(prayTime),\r\n        current_pray_time : this.getCurrentPrayTime(prayTime),\r\n        ...ip,\r\n        ...geo,\r\n        ...prayTime\r\n      }, () => console.log(this.state));\r\n    } catch (error) {\r\n      this.setState({\r\n        is_error : true,\r\n        error_message : error\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n    @params: prayTime object\r\n  */\r\n  getNextPrayName(prayTime) {\r\n    const currentTime = new Date();\r\n    const compareTimes = this.prayTimes.map((time) => {\r\n      return (Number(prayTime[time].split(':')[0])*60+Number(prayTime[time].split(':')[1]) > currentTime.getHours()*60+currentTime.getMinutes());\r\n    });\r\n    const indexNextPrayTime = compareTimes.indexOf(true);\r\n    return indexNextPrayTime > -1 ? this.prayTimes[indexNextPrayTime] : null;\r\n  }\r\n\r\n  getNextPrayIndex(prayTime) {\r\n    const currentTime = new Date();\r\n    const compareTimes = this.prayTimes.map((time) => {\r\n      return (Number(prayTime[time].split(':')[0])*60+Number(prayTime[time].split(':')[1]) > currentTime.getHours()*60+currentTime.getMinutes());\r\n    });\r\n    return compareTimes.indexOf(true);\r\n  }\r\n\r\n  getNextPrayDate(prayTime) {\r\n    const currentTime = new Date();\r\n    const nextPrayTime = this.getNextPrayName(prayTime);\r\n    if (nextPrayTime) {\r\n      const nextTime = prayTime[nextPrayTime].split(':');\r\n      currentTime.setHours(nextTime[0]);\r\n      currentTime.setMinutes(nextTime[1]);\r\n      return currentTime.getTime();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getCurrentPrayTime(prayTime) {\r\n    const idx = this.getNextPrayIndex(prayTime);\r\n    if (idx === 0) {\r\n      return null;\r\n    } else {\r\n      return this.prayTimes[idx-1];\r\n    }\r\n  }\r\n\r\n  renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      // Render a completed state\r\n      this.forceUpdate();\r\n    } else {\r\n      // Render a countdown\r\n      return <span>{hours} jam {minutes} menit {seconds} detik menuju {this.state.next_pray_time}</span>;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.init();\r\n  }\r\n\r\n  render() {\r\n    const loading = this.state.is_loading;\r\n    const errorFound = this.state.is_error;\r\n\r\n    if (loading) {\r\n      return (\r\n      <div className=\"loader\">\r\n        <BlockLoading />\r\n        <p>Receiving data ...</p>\r\n      </div>\r\n      )\r\n    }\r\n\r\n    if (errorFound) {\r\n      return (\r\n        <div>\r\n          {alert(this.state.error_message)}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        {/* title & date */}\r\n        <div className=\"p-grid p-align-center p-mt-6\">\r\n          <div className=\"p-col-12 display-title\">\r\n            Jadwal Sholat Hari Ini \r\n          </div>\r\n          <div className=\"p-col-12 display-value\">\r\n            <b><i className=\"pi pi-calendar\" style={{'fontSize': '2rem'}}></i> {this.state.date_masehi} (UTC{parseInt(this.state.time_offset) >= 0 ? `+${this.state.time_offset}` : `-${this.state.time_offset}`})</b>\r\n          </div>\r\n        </div>\r\n        {/* location */}\r\n        <div className=\"p-grid p-align-center p-mt-6\">\r\n          <div className=\"p-col-12 display-title\">\r\n            Lokasi Terdeteksi\r\n          </div>\r\n          <div className=\"p-col-12 display-value\">\r\n            <b><i className=\"pi pi-map-marker\" style={{'fontSize': '2rem'}}></i> {this.state.city}, {this.state.country}</b>\r\n          </div>\r\n        </div>\r\n        {/* pray times */}\r\n        <div className=\"p-grid p-align-center p-mt-6\">\r\n          <div \r\n            className={`p-col p-d-flex p-flex-column p-mx-sm-3 ${this.state.current_pray_time === 'subuh' ? 'highlight-current-pray' : ''}`}\r\n          >\r\n            <div className=\"display-title\"> Subuh </div>\r\n            <div className=\"display-value\">{this.state['subuh']}</div>\r\n          </div>\r\n          <div\r\n            className={`p-col p-d-flex p-flex-column p-mx-sm-3 ${this.state.current_pray_time === 'dzuhur' ? 'highlight-current-pray' : ''}`}\r\n          >\r\n            <div className=\"display-title\"> Dzuhur </div>\r\n            <div className=\"display-value\">{this.state['dzuhur']}</div>\r\n          </div>\r\n          <div\r\n            className={`p-col p-d-flex p-flex-column p-mx-sm-3 ${this.state.current_pray_time === 'ashar' ? 'highlight-current-pray' : ''}`}\r\n          >\r\n            <div className=\"display-title\"> Ashar </div>\r\n            <div className=\"display-value\">{this.state['ashar']}</div>\r\n          </div>\r\n          <div \r\n            className={`p-col p-d-flex p-flex-column p-mx-sm-3 ${this.state.current_pray_time === 'maghrib' ? 'highlight-current-pray' : ''}`}\r\n          >\r\n            <div className=\"display-title\"> Maghrib </div>\r\n            <div className=\"display-value\">{this.state['maghrib']}</div>\r\n          </div>\r\n          <div \r\n            className={`p-col p-d-flex p-flex-column p-mx-sm-3 ${this.state.current_pray_time === 'isya' ? 'highlight-current-pray' : ''}`}\r\n          >\r\n            <div className=\"display-title\"> Isya </div>\r\n            <div className=\"display-value\">{this.state['isya']}</div>\r\n          </div>\r\n        </div>\r\n        {/* countdown */}\r\n        <div className=\"p-grid p-align-center p-mt-6\">\r\n          <div className=\"p-col-12\"> \r\n          <Countdown\r\n            date={this.state.next_pray_date}\r\n            renderer={this.renderer}\r\n          />\r\n          </div>\r\n        </div>\r\n        <div className=\"stars\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}","import './App.css';\nimport 'primeflex/primeflex.css';\nimport 'primereact/resources/themes/vela-orange/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport React from 'react';\nimport { Menu } from 'primereact/menu';\nimport { Button } from 'primereact/button';\nimport About from './pages/About';\nimport Home from './pages/Home';\n\nexport default class App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.items = [\n      {\n        label: 'Menu',\n        items: [\n          {\n            label: 'Home',\n            icon: 'pi pi-home',\n            command: ()=>{ window.location=\"/\"; }\n          },\n          {\n            label: 'About',\n            icon: 'pi pi-info',\n            command: ()=>{ window.location=\"/about\"; }\n          }\n        ]\n      }\n    ];\n  }\n\nrender() {\n  return (\n    <div className=\"p-p-4 app-bkg\">\n      <div className=\"app-inner-bkg\">\n        <div className=\"header-menu\">\n          <Menu model={this.items} popup ref={el => this.menu = el} id=\"popup_menu\" />\n          <Button icon=\"pi pi-bars\" className=\"p-button-rounded p-button-secondary p-button-outlined\" onClick={(event) => this.menu.toggle(event)} aria-controls=\"popup_menu\" aria-haspopup/>\n        </div>\n        <Router>\n            <Switch>\n              <Route exact path=\"/about\">\n                <About name=\"you\" />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n        </Router>\n      </div>\n    </div>\n    );\n  }\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PrimeReact from 'primereact/utils';\n\nPrimeReact.ripple = true;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}